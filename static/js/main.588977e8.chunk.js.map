{"version":3,"sources":["components/Card/Card.tsx","components/Preloader/Preloader.tsx","components/Button/Button.tsx","components/Page/Page.tsx","utils/sort.tsx","components/UsersPage/UsersPage.tsx","components/InputElement/InputElement.tsx","components/Form/Form.tsx","constants/constants.tsx","components/UserPage/UserPage.tsx","components/App/App.tsx","reportWebVitals.js","index.js"],"names":["Card","user","more","className","name","address","city","company","onClick","Preloader","Button","children","type","Page","sortCities","sortCompanies","byField","field1","field2","a","b","sortOnCity","arr","sort","sortOnCompany","UsersPage","history","useHistory","useState","users","setUsers","preloader","setPreloader","setSortCities","setSortCompanies","useEffect","axios","get","then","res","data","catch","err","console","log","finally","pushToUser","push","id","sortUsers","reverse","map","length","InputElement","inputName","isRedact","inputValue","handleChange","disabled","value","onChange","e","required","Form","thisUser","initialInputsValue","username","email","street","zipcode","phone","website","comment","inputsValue","setinputsValue","isValid","setIsValid","target","onSubmit","preventDefault","userData","JSON","stringify","noValidate","userInitialState","UserPage","setUser","setIsRedact","params","useParams","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.588977e8.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { IUser } from '../../types/types';\nimport './Card.scss';\n\ninterface CardProps {\n  user: IUser;\n  more: (user: IUser) => void;\n}\n\n\nconst Card: FC<CardProps> = ({ user, more }) => {\n  return (\n    <div className='card'>\n      <p className='card__info'>\n        <span className='card__info_name_string'>ФИO: </span> {user.name}\n      </p>\n      <p className='card__info'>\n        <span className='card__info_name_string'>город: </span> {user.address.city}\n      </p>\n      <p className='card__info'>\n        <span className='card__info_name_string'>компания: </span> {user.company.name}\n      </p>\n      <button onClick={() => more(user)} className='card__more'>Подробнее</button>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react'\nimport './Preloader.css'\n\nconst Preloader = () => {\n    return (\n        <div className=\"preloader\">\n            <div className=\"preloader__container\">\n                <span className=\"preloader__round\"></span>\n            </div>\n        </div>\n    )\n};\n\nexport default Preloader\n","import { ReactNode, FC } from 'react';\nimport './Button.scss';\n\ninterface ButtonProps {\n  children: ReactNode;\n  onClick: () => void;\n}\n\n\nconst Button: FC<ButtonProps> = ({ children, onClick }) => {\n  return (\n    <button onClick={() => onClick()} className=\"button\" type='button'>{children}</button>\n  );\n}\n\nexport default Button;\n","import { ReactNode, FC } from 'react';\nimport Button from '../Button/Button';\nimport './Page.scss';\n\ninterface PageProps {\n  children: ReactNode;\n  sortCities?: () => void;\n  sortCompanies?: () => void;\n}\n\nconst Page: FC<PageProps> = ({children, sortCities, sortCompanies}) => {\n  return (\n    <div className=\"page\">\n      <div className=\"page__sort-container\">\n        <span className=\"page__sort-text\">Сортировка</span>\n        <Button onClick={sortCities ? sortCities : () => {}}>по городу</Button>\n        <Button onClick={sortCompanies ? sortCompanies : () => {}}>по компании</Button>\n      </div>\n      <div className=\"page__content-container\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Page;\n","import { IUser } from \"../types/types\";\r\n\r\nfunction byField(field1: string, field2: string) {\r\n  return (a: any, b: any) => a[field1][field2] > b[field1][field2] ? 1 : -1;\r\n}\r\n\r\nexport const sortOnCity = (arr: IUser[]): IUser[] => {\r\n  const sortHotels = arr.sort(byField('address', 'city'));\r\n  return sortHotels\r\n};\r\n\r\nexport const sortOnCompany = (arr: IUser[]): IUser[] => {\r\n  const sortHotels = arr.sort(byField('company', 'name'));\r\n  return sortHotels\r\n};","import { FC, useEffect, useState } from 'react';\nimport Card from '../Card/Card';\nimport Preloader from '../Preloader/Preloader';\nimport Page from '../Page/Page';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './UsersPage.scss';\nimport { IUser } from '../../types/types';\nimport { sortOnCity, sortOnCompany } from '../../utils/sort';\n\n\nconst UsersPage: FC = () => {\n\n  const history = useHistory()\n  const [users, setUsers] = useState<IUser[]>([])\n  const [preloader, setPreloader] = useState<boolean>(true)\n  const [sortCities, setSortCities] = useState<boolean>(true);\n  const [sortCompanies, setSortCompanies] = useState<boolean>(true);\n\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/users`)\n    .then(res => {\n      setUsers(res.data)\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n    .finally(() => {\n      setPreloader(false)\n    })\n  }, [])\n\n  const handleCitiesSort = () => {\n    if (sortCities) {\n      const sortUsers = sortOnCity(users)\n      setUsers(sortUsers)\n      setSortCities(false)\n    } else {\n      const sortUsers = sortOnCity(users).reverse()\n      setUsers(sortUsers)\n      setSortCities(true)\n    }\n  }\n\n  const handleCompaniesSort = () => {\n    if (sortCompanies) {\n      const sortUsers = sortOnCompany(users)\n      setUsers(sortUsers)\n      setSortCompanies(false)\n    } else {\n      const sortUsers = sortOnCompany(users).reverse()\n      setUsers(sortUsers)\n      setSortCompanies(true)\n    }\n  }\n\n  const pushToUser = (user: IUser) => {\n    history.push(`/${user.id}`)\n  }\n\n  return (\n    <Page\n      sortCities={handleCitiesSort}\n      sortCompanies={handleCompaniesSort}\n    >\n      <h1 className=\"app__title\">Список пользователей</h1>\n      { preloader ? <Preloader/> : ''}\n      {users.map((user) => (\n        <Card\n          key={user.id}\n          user={user}\n          more={pushToUser}\n        />\n      ))}\n      <p className=\"users-page__count-users\">Найдено {users.length} пользователей</p>\n    </Page>\n  );\n}\n\nexport default UsersPage;\n","import { FC } from 'react';\nimport './InputElement.scss';\n\ninterface InputElementProps {\n  inputName: string;\n  name: string;\n  isRedact: boolean;\n  inputValue: string;\n  handleChange: (e: any) => void;\n}\n\nconst InputElement: FC<InputElementProps> = ({ inputName, isRedact, inputValue, name, handleChange}) => {\n  return (\n    <div className=\"imput\">\n      <span className=\"form__input-name\">{inputName}</span>\n      <input disabled={!isRedact} value={inputValue} onChange={(e) => handleChange(e)} type=\"text\" name={name} required className={`form__input ${ inputValue ? '' : 'form__input_type_error'}`}></input>\n    </div>\n  );\n}\n\nexport default InputElement;\n","import { FC, useEffect, useState } from 'react';\nimport { IUser, IValues } from '../../types/types';\nimport InputElement from '../InputElement/InputElement';\nimport './Form.scss';\n\ninterface FormProps {\n  thisUser: IUser;\n  isRedact: boolean;\n}\n\nconst Form: FC<FormProps> = ({ thisUser, isRedact }) => {\n\n  const initialInputsValue: IValues = {\n    name: thisUser.name,\n    username: thisUser.username,\n    email: thisUser.email,\n    street: thisUser.address.street,\n    city: thisUser.address.city,\n    zipcode: thisUser.address.zipcode,\n    phone: thisUser.phone,\n    website: thisUser.website,\n    comment: thisUser.comment,\n  }\n\n  const [inputsValue, setinputsValue] = useState<IValues>(initialInputsValue);\n  const [isValid, setIsValid] = useState<boolean>(true);\n\n  useEffect(() => {\n    setinputsValue(initialInputsValue)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [thisUser])\n\n  useEffect(() => {\n    if (isRedact &&\n        inputsValue.name &&\n        inputsValue.username &&\n        inputsValue.email &&\n        inputsValue.street &&\n        inputsValue.city &&\n        inputsValue.zipcode &&\n        inputsValue.phone &&\n        inputsValue.phone &&\n        inputsValue.website\n      ) {\n      setIsValid(true)\n    } else {\n      setIsValid(false)\n    }\n  }, [inputsValue, isRedact])\n\n  const handleChange = (e: any) => {\n    const { name, value } = e.target\n    setinputsValue({\n      ...inputsValue,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const userData: IUser = {\n      id: thisUser.id,\n      name: inputsValue.name,\n      username: inputsValue.username,\n      email: inputsValue.email,\n      address: {\n        street: inputsValue.street,\n        city: inputsValue.city,\n        zipcode: inputsValue.zipcode,\n      },\n      phone: inputsValue.phone,\n      website: inputsValue.website,\n      company: {\n        name: thisUser.company.name,\n      },\n      comment: inputsValue.comment,\n    }\n    console.log(JSON.stringify(userData))\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit} noValidate>\n      <InputElement inputName='Name' isRedact={isRedact} name='name' inputValue={inputsValue.name} handleChange={handleChange}/>\n      <InputElement inputName='User name' isRedact={isRedact} name='username' inputValue={inputsValue.username} handleChange={handleChange}/>\n      <InputElement inputName='E-mail' isRedact={isRedact} name='email' inputValue={inputsValue.email} handleChange={handleChange}/>\n      <InputElement inputName='Street' isRedact={isRedact} name='street' inputValue={inputsValue.street} handleChange={handleChange}/>\n      <InputElement inputName='City' isRedact={isRedact} name='city' inputValue={inputsValue.city} handleChange={handleChange}/>\n      <InputElement inputName='Zip code' isRedact={isRedact} name='zipcode' inputValue={inputsValue.zipcode} handleChange={handleChange}/>\n      <InputElement inputName='Phone' isRedact={isRedact} name='phone' inputValue={inputsValue.phone} handleChange={handleChange}/>\n      <InputElement inputName='Website' isRedact={isRedact} name='website' inputValue={inputsValue.website} handleChange={handleChange}/>\n      <span className=\"form__input-name\">Comment</span>\n      <textarea disabled={!isRedact} value={inputsValue.comment || ''} onChange={handleChange} name=\"comment\" className='form__text-area'></textarea>\n      <button disabled={!isValid} className=\"form__submit\" type=\"submit\" >Отправить</button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { IUser } from \"../types/types\"\r\n\r\nexport const userInitialState: IUser = {\r\n  id: 1,\r\n  name: '',\r\n  username: '',\r\n  email: '',\r\n  address: {\r\n    street: '',\r\n    city: '',\r\n    zipcode: '',\r\n  },\r\n  phone: '',\r\n  website: '',\r\n  company: {\r\n    name: '',\r\n  },\r\n  comment: '',\r\n}\r\n","import { FC, useEffect, useState  } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './UserPage.scss';\nimport Page from '../Page/Page';\nimport Form from '../Form/Form';\nimport Button from '../Button/Button';\nimport { IUser } from '../../types/types';\nimport { userInitialState } from '../../constants/constants';\n\ninterface UserItemPageParams {\n  id: string;\n}\n\n\nconst UserPage: FC = () => {\n\n  const [user, setUser] = useState<IUser>(userInitialState)\n  const [isRedact, setIsRedact] = useState<boolean>(false);\n  const params = useParams<UserItemPageParams>()\n\n  useEffect(() => {\n    axios.get<IUser>(`https://jsonplaceholder.typicode.com/users/${params.id}`)\n    .then(res => {\n      setUser(res.data)\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }, [params.id])\n\n  const redactForm = () => {\n    if (isRedact) {\n      setIsRedact(false)\n    } else {\n      setIsRedact(true)\n    }\n  }\n\n  return (\n    <Page>\n      <div className=\"user-page__header-container\">\n        <h1 className=\"app__title\">Профиль пользоваетля</h1>\n        <Button onClick={redactForm} >Редактироввать</Button>\n      </div>\n      <Form\n        thisUser={user}\n        isRedact={isRedact}\n      />\n    </Page>\n  );\n}\n\nexport default UserPage;\n","import { Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport UsersPage from '../UsersPage/UsersPage';\nimport UserPage from '../UserPage/UserPage';\n\n\nconst App = () => {\n\n\n  return (\n    <div className=\"app\">\n      <Switch>\n\n        <Route exact path='/'>\n          <UsersPage/>\n        </Route>\n\n        <Route path='/:id'>\n          <UserPage/>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App/App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}